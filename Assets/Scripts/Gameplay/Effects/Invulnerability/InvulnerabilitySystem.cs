using UnityEngine;
using Leopotam.Ecs;
using DG.Tweening;
using RiderGame.SO;

namespace RiderGame.Gameplay
{
    public class InvulnerabilitySystem : IEcsRunSystem
    {
        private readonly EcsFilter<BaseEffect, Invulnerability> _fInvulnerabilityObjects;

        public static void AddInvulnerablility(ref EcsEntity entity, SpriteRenderer renderer, float duration, float blinkInterval)
        {
            var baseEffect = new BaseEffect
            {
                duration = duration
            };
            entity.Replace(baseEffect);

            var invulnerability = new Invulnerability
            {
                blinkingSequence = InitSpriteBlinkingSequence(blinkInterval, renderer)
            };
            entity.Replace(invulnerability);
        }

        public void Run()
        {
            foreach(var i in _fInvulnerabilityObjects)
            {
                ref var entity = ref _fInvulnerabilityObjects.GetEntity(i);
                ref var baseEffect = ref _fInvulnerabilityObjects.Get1(i);
                ref var invulnerability = ref _fInvulnerabilityObjects.Get2(i);

                if (!baseEffect.isEnd) return;

                invulnerability.blinkingSequence.Kill();
                entity.Del<Invulnerability>();
            }
        }

        private static Sequence InitSpriteBlinkingSequence(float blinkInterval, SpriteRenderer renderer)
        {
            var sequence = DOTween.Sequence();

            sequence.Append(renderer.DOFade(0, blinkInterval));
            sequence.Append(renderer.DOFade(1, blinkInterval));

            sequence.SetLoops(-1);
            return sequence;
        }
    }
}
